# HG changeset patch
# User JoÃ£o Matos <joao@tritao.eu>
# Date 1406567095 -3600
# Branch http
# Node ID c3184627390502ebc28d3c056aa5870c340ea566
# Parent  460a6580b6ac2ca58e301026037be7082751b63f
Formatting cleanup.

diff --git a/src/host/http.c b/src/host/http.c
--- a/src/host/http.c
+++ b/src/host/http.c
@@ -12,30 +12,30 @@
 #include <curl/curl.h>
 
 typedef struct {
-  char* ptr;
-  size_t len;
+	char* ptr;
+	size_t len;
 } string;
 
-void string_init(string* s) {
-  s->len = 0;
-  s->ptr = (char*) malloc(s->len+1);
-  if (s->ptr == NULL) {
-    fprintf(stderr, "malloc() failed\n");
-    exit(EXIT_FAILURE);
-  }
-  s->ptr[0] = '\0';
+void string_init(string* s)
+{
+	s->len = 0;
+	s->ptr = (char*) malloc(s->len+1);
+	if (s->ptr == NULL)
+	{
+		fprintf(stderr, "malloc() failed\n");
+		exit(EXIT_FAILURE);
+	}
+	s->ptr[0] = '\0';
 }
 
-typedef struct
-{
+typedef struct {
 	lua_State* L;
 	int RefIndex;
 	string S;
-	const char* File;
 } CurlCallbackState;
 
-int curl_progress_cb(void* userdata, double dltotal, double dlnow,
-                     double ultotal, double ulnow)
+static int curl_progress_cb(void* userdata, double dltotal, double dlnow,
+	double ultotal, double ulnow)
 {
 	CurlCallbackState* state = (CurlCallbackState*) userdata;
 	lua_State* L = state->L;
@@ -54,7 +54,7 @@
 	return 0;
 }
 
-size_t curl_write_cb(char *ptr, size_t size, size_t nmemb, void *userdata)
+static size_t curl_write_cb(char *ptr, size_t size, size_t nmemb, void *userdata)
 {
 	CurlCallbackState* state = (CurlCallbackState*) userdata;
 	string* s = &state->S;
@@ -152,7 +152,7 @@
 	{
 		err = curl_easy_strerror(code);
 
-		lua_pushnil(L);
+		lua_pushnil(L);
 		lua_pushfstring(L, err);
 		return 2;
 	}
@@ -178,7 +178,7 @@
 	fp = fopen(file, "wb");
 	if (!fp)
 	{
-		lua_pushnil(L);
+		lua_pushnil(L);
 		lua_pushfstring(L, "could not open file");
 		return 2;
 	}
@@ -196,7 +196,7 @@
 	{
 		err = curl_easy_strerror(code);
 
-		lua_pushnil(L);
+		lua_pushnil(L);
 		lua_pushfstring(L, err);
 		return 2;
 	}
